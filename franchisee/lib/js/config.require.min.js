/**
 * Created by Administrator on 2014/12/24.
 */
/* global CONFIGURATION */
var BASE_URL = (function() {
    'use strict';

    if (CONFIGURATION && CONFIGURATION.MODULES_URL) {
        return CONFIGURATION.MODULES_URL;
    }

    var
        index,
        url = window.location.href,
        projectName = CONFIGURATION ? CONFIGURATION.PROJECT_NAME || '/' : '/',
        modulePath = CONFIGURATION ? CONFIGURATION.MODULES_PATH || '' : '';

    if (projectName === '/') {
        index = url.lastIndexOf(projectName);

        if (index > 0) {
            return url.substr(0, index) + '/';
        }
    } else {
        index = url.indexOf(projectName);

        if (index > 0) {
            return url.substr(0, index) + modulePath + projectName + '/';
        }
    }

    return modulePath + projectName + '/';
})();


// 定制加载应用插件
function setRequierPath(options){
	
	
}

require.config({
    urlArgs: 'ver=___version___',
    baseUrl: BASE_URL,
	map: {
		'*': {
			css: 'lib/components/require-css/css'
		}
	},
    waitSeconds: 0,
    paths: (function(options){
				// 定制加载应用插件依赖
				options = options || {};
				var defOptions = {
					jquery: 'lib/components/jquery/jquery.min',
					angular: 'lib/components/angular/angular.min',
					angular_animate: 'lib/components/angular-animate/angular-animate.min',
					angular_sanitize: 'lib/components/angular-sanitize/angular-sanitize.min',
					angular_ui_router: 'lib/components/angular-ui-router/release/angular-ui-router.min',
					ionic: 'lib/components/ionic/release/js/ionic.min',
					ionic_angular: 'lib/components/ionic/release/js/ionic-angular.min',
					//loading: 'lib/components/angular-loading-bar/build/loading-bar.min',
                    loading: 'lib/js/main/loadingBar',
					i_scroll: 'lib/components/iscroll/build/iscroll',
					ng_i_scroll: 'lib/components/ng-iScroll/src/ng-iscroll.min',
					collide: 'lib/components/collide/collide',
					angular_translate: 'lib/components/angular-translate/angular-translate.min',
					angular_translate_loader_static_files: 'lib/components/angular-translate-loader-static-files/angular-translate-loader-static-files.min'
					
				}
				
				for(var key in options){
					defOptions[key] = options[key]
				}	
				return defOptions;
			})(CONFIGURATION.requireModulePath),
    shim: (function(options){
			options = options || {};
			var defOptions = {
				angular: {
					deps: [
						'jquery'
					],
					exports: 'angular'
				},
				angular_animate: {
					deps: ['angular'],
					exports: 'angular_animate'
				},
				angular_sanitize: {
					deps: ['angular'],
					exports: 'angular_sanitize'
				},
				angular_ui_router: {
					deps: ['angular'],
					exports: 'angular_ui_router'
				},
				ionic: {
					exports: 'ionic'
				},
				ionic_angular: {
					deps: [
						'angular',
						'angular_animate',
						'angular_sanitize',
						'angular_ui_router',
						'ionic'
					],
					exports: 'ionic_angular'
				},
				loading: {
					deps: ['angular'],
					exports: 'loading'
				},
				ng_i_scroll: {
					deps: [
						'angular',
						'i_scroll'
					],
					exports: 'ng_i_scroll'
				},
				collide: {
					exports: 'collide'
				},
				angular_translate: {
					deps: ['angular'],
					exports: 'angular_translate'
				},
				angular_translate_loader_static_files: {
					deps: ['angular', 'angular_translate'],
					exports: 'angular_translate_loader_static_files'
				}
			}
			
			for(var key in options){
				defOptions[key] = options[key];
			}
			
			return defOptions;
			
	})(CONFIGURATION.requireModuleShim)
});
